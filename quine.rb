$Definition = <<'DEF'
def encode(prog)
  prog.unpack("H*")[0].to_i(16)
end

def decode(int)
  [int.to_s(16)].pack("H*")
end

def universal(prog_g, inputs)
  prog = decode(prog_g)
  args = "$x = " + inputs.to_s + "\n"
  $x_temp.push($x.dup)
  $x = []
  ans = eval(args + prog)
  $x = $x_temp.shift
  return ans
end

$definitionstr = '$Definition = <<\'DEF\''+"\n"+$Definition +"\n"+"DEF\n"

def smn(m, n, prog_g, inputs)
  init = "$x=[] unless $x\n" + "$x_temp=[] unless $x_temp\n"
  prog = decode(prog_g)
  args = "$x[#{m}, #{n}] = " + inputs[0, n].to_s + "\n"
  encode($definitionstr + $Definition + init + args + prog)
end

def rec(prog_g, n)
  prog = decode(prog_g)
  f = <<~EOS
  $x[#{n}] = smn(#{n}, 1, $x[#{n}], [$x[#{n}]])
  #{prog}
  EOS
  f_g = encode(f)
  smn(n, 1, f_g, [f_g])
end


DEF
def encode(prog)
  prog.unpack("H*")[0].to_i(16)
end

def decode(int)
  [int.to_s(16)].pack("H*")
end

def universal(prog_g, inputs)
  prog = decode(prog_g)
  args = "$x = " + inputs.to_s + "\n"
  $x_temp.push($x.dup)
  $x = []
  ans = eval(args + prog)
  $x = $x_temp.shift
  return ans
end

$definitionstr = '$Definition = <<\'DEF\''+"\n"+$Definition +"\n"+"DEF\n"

def smn(m, n, prog_g, inputs)
  init = "$x=[] unless $x\n" + "$x_temp=[] unless $x_temp\n"
  prog = decode(prog_g)
  args = "$x[#{m}, #{n}] = " + inputs[0, n].to_s + "\n"
  encode($definitionstr + $Definition + init + args + prog)
end

def rec(prog_g, n)
  prog = decode(prog_g)
  f = <<~EOS
  $x[#{n}] = smn(#{n}, 1, $x[#{n}], [$x[#{n}]])
  #{prog}
  EOS
  f_g = encode(f)
  smn(n, 1, f_g, [f_g])
end

$x=[] unless $x
$x_temp=[] unless $x_temp
$x[0, 1] = [10915384352250229479860803097775476294606653427787605137598164638182081017414386401116625118052142802480683622564162568290393624700324470914367501920567640813837697260031371967167797775541680246258302426991192992349671133995211706108840743718370136396583866563836106194262359363854254510080476954022698735346582746896559920708859279466298104477647694251584231559600970280016477205952323792853941056096536205465193856420902710857754544242133866765912333624462136686460059097438814363807577707160351544830671092739868812775858372835943776278642970640992306094202287956877301254525976140149843020682721538273885723421155878318585680056747100162174352271695970823827339729630079573113787058021318137822173505940837271265455275960263686668856459642205910508611193797242710241589092312117700633377302501720782533421482253731130407291756105817582238536071079109972410014835871069863758534033539324725774951706265575284542945634593167074088681060622413109794869344410926783265356952411483169356268486211717708337378718187827584921526145094816738003653188239387482502635086868926889061740992252260902984443175667176556897685785484518594044134975488079426786850576024337419281476463928611357991953179725043747505349443716168597911495801139598158952972029498897626836304277647235339921259292935123851544684981191103992148222479667868744838991779499983712973990952368586785475137756625105883764472757683618147530846525083415633756915515579778622577058440268389193091856204024904188829903223296887163788742074744793492148977959756215593082142748511236134892924509684826821424151499464324127766006441808644091627475906790009489799825337911489183239934640062043257751677210633222700787046527452480148573708014407977003145958208310129870859509371528358700412789476100756459592966362396409190588671722796781896897978005468734054567697329040739721738589156131261910040188938109847072191941507474483978587626042860324283091634103039306605825406592363126108354206197946757286530941075378750965593987866121338984599424457407371946948237417564770237576987051557411740040846060945608927289701581501810344711657465866522403337981850871445234517769655040029842638864924990129341128788783221369823694382770768621082210629424591260599990588936283348142708722564407913239320639315183588660761510544145768332920875331581591286108875426331011480328309564200832684401541708680552569587979352102454914200080448938122563417028475057027639365602253169552553728193491001070582701671908785685240184285927572783393628284537294782017108953701715600651711198489954694477441342628282631257472373646651904695609305032006123587118492989009483533387644739646694839932349095655484372020833690575896159383000285930130216000894136354403766049526869028225906861689451538054580799702397397921789424265708122941196089365528071833915002094201260861046391575318969158993912936346875948947128205985884116667296649938127646851826388076512778632177117315324213570354799541009277669820550440404642589623416117063810069126651919535694057046944013891597846199417558402877425666177679412266947220284646532074776204397834467207016775030208544751006069744100023739047925801025857693375037271937417882351831104910749436981443090913043912629211719593380190699139474585523139394104177552803480708010915155778562048046453155641599114799525348410295329894645737276299063896972673561079559531130213821695842387489108725285189323744533950218154198708103602288488120591228051737803020371532921413616478177762706080379227451214131265415285452845135969895019286217156299990027184418515473800567548502735158734626834040107114451626755031918736969454387853378797896603266713987443905644349901682406681700702207192651446692578987781446797692998588634616908126122323964843750986028477204742913306251473375371910414699686716642272689949086107426954683672546915892031432571878606314202927686281446219353420118772436448141935292418362266067528865191236432543309224778363858047345898313207228608953536435605535510686635506100908996884430083100424458355214288099301355467808174063440051583696759724526973370590967007592363094004805995018]
$x[0] = smn(0, 1, $x[0], [$x[0]])
$Definition = <<'DEF'
def encode(prog)
  prog.unpack("H*")[0].to_i(16)
end

def decode(int)
  [int.to_s(16)].pack("H*")
end

def universal(prog_g, inputs)
  prog = decode(prog_g)
  args = "$x = " + inputs.to_s + "\n"
  $x_temp.push($x.dup)
  $x = []
  ans = eval(args + prog)
  $x = $x_temp.shift
  return ans
end

$definitionstr = '$Definition = <<\'DEF\''+"\n"+$Definition +"\n"+"DEF\n"

def smn(m, n, prog_g, inputs)
  init = "$x=[] unless $x\n" + "$x_temp=[] unless $x_temp\n"
  prog = decode(prog_g)
  args = "$x[#{m}, #{n}] = " + inputs[0, n].to_s + "\n"
  encode($definitionstr + $Definition + init + args + prog)
end

def rec(prog_g, n)
  prog = decode(prog_g)
  f = <<~EOS
  $x[#{n}] = smn(#{n}, 1, $x[#{n}], [$x[#{n}]])
  #{prog}
  EOS
  f_g = encode(f)
  smn(n, 1, f_g, [f_g])
end

DEF
def encode(prog)
  prog.unpack("H*")[0].to_i(16)
end

def decode(int)
  [int.to_s(16)].pack("H*")
end

def universal(prog_g, inputs)
  prog = decode(prog_g)
  args = "$x = " + inputs.to_s + "\n"
  $x_temp.push($x.dup)
  $x = []
  ans = eval(args + prog)
  $x = $x_temp.shift
  return ans
end

$definitionstr = '$Definition = <<\'DEF\''+"\n"+$Definition +"\n"+"DEF\n"

def smn(m, n, prog_g, inputs)
  init = "$x=[] unless $x\n" + "$x_temp=[] unless $x_temp\n"
  prog = decode(prog_g)
  args = "$x[#{m}, #{n}] = " + inputs[0, n].to_s + "\n"
  encode($definitionstr + $Definition + init + args + prog)
end

def rec(prog_g, n)
  prog = decode(prog_g)
  f = <<~EOS
  $x[#{n}] = smn(#{n}, 1, $x[#{n}], [$x[#{n}]])
  #{prog}
  EOS
  f_g = encode(f)
  smn(n, 1, f_g, [f_g])
end
universal(smn(0,1,164341359529058787722379816188873226623742739294474,[$x[0]]),[])

