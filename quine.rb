$Definition = <<'DEF'
def encode(prog)
  prog.unpack("H*")[0].to_i(16)
end

def decode(int)
  [int.to_s(16)].pack("H*")
end

def universal(prog_g, inputs)
  prog = decode(prog_g)
  args = "$x = " + inputs.to_s + "\n"
  $x_temp.push($x.dup)
  $x = []
  ans = eval(args + prog)
  $x = $x_temp.shift
  return ans
end

$definitionstr = '$Definition = <<\'DEF\''+"\n"+$Definition +"DEF\n"

def smn(m, n, prog_g, inputs)
  init = "$x=[] unless $x\n" + "$x_temp=[] unless $x_temp\n"
  prog = decode(prog_g)
  args = "$x[#{m}, #{n}] = " + inputs[0, n].to_s + "\n"
  encode($definitionstr + $Definition + init + args + prog)
end

def rec(prog_g, n)
  prog = decode(prog_g)
  f = <<~EOS
  $x[#{n}] = smn(#{n}, 1, $x[#{n}], [$x[#{n}]])
  #{prog}
  EOS
  f_g = encode(f)
  smn(n, 1, f_g, [f_g])
end
DEF
def encode(prog)
  prog.unpack("H*")[0].to_i(16)
end

def decode(int)
  [int.to_s(16)].pack("H*")
end

def universal(prog_g, inputs)
  prog = decode(prog_g)
  args = "$x = " + inputs.to_s + "\n"
  $x_temp.push($x.dup)
  $x = []
  ans = eval(args + prog)
  $x = $x_temp.shift
  return ans
end

$definitionstr = '$Definition = <<\'DEF\''+"\n"+$Definition +"DEF\n"

def smn(m, n, prog_g, inputs)
  init = "$x=[] unless $x\n" + "$x_temp=[] unless $x_temp\n"
  prog = decode(prog_g)
  args = "$x[#{m}, #{n}] = " + inputs[0, n].to_s + "\n"
  encode($definitionstr + $Definition + init + args + prog)
end

def rec(prog_g, n)
  prog = decode(prog_g)
  f = <<~EOS
  $x[#{n}] = smn(#{n}, 1, $x[#{n}], [$x[#{n}]])
  #{prog}
  EOS
  f_g = encode(f)
  smn(n, 1, f_g, [f_g])
end
$x=[] unless $x
$x_temp=[] unless $x_temp
$x[0, 1] = [35269509041976867292751572883899903381622549088190133419983968870899312338966424786001433225371490859344933075048830358625205294165386612231363459446687580982550011737660369573765779030150109221097864861190378831880031054880887121371140163516299568201646054441131963337991846522558771565897926080884020717751956758745972863019828653131560264413657450448272980560062283408313579185757337075916014085795520804202032063480069341261756036085864040654188736701964385607385531416828073521081922443837960579765791395782396984676333992458696577729922206187156302708100715741895130108927355322071451657970352799160448903985599870835558348675294085969242015883215825295203057323075270017087799608642597728606661661513254411990341995454988691712702467088450677643287617990886383621537226370317955137136394176683520567693188173682549996440305320409137852654650650983263314282641377333224182101919401479351507538006655403091288827309846522869973811900491811454875486876907886214290882802788795746801700864033356675515612692938958541874988694688464306110199517674342764532358480659611091649951959942318584770791720188402351326256356644165671742709901726244372410013846199828202593072528884538800221913711362411643318574171447802584909303422648968906232475096852329112764863797305067989888124775276461228591829118998612616206250782264257692283676316374709488503829870256137251442667729948835985006718055375509070758258762622566811860893364926848482100272995470233012872717193908401107099086673859993106662224554417687265140083532443491255634586486391773869556643594348912524655072530180149623039457039209660447492700260214319725022735735705620866541366877957803396459177011092926850977644904934504595107903451951802398842430218308732329393061979452121428698926493777564988927713401338583075331553167630558872199540962397511107459537163045144464923581052595384612366694995670133842136888101066655922178316378745326274759022020685322676959922322480302307909966363374414178253277214036218512159663546227873000036664521109861935975457807902783416899738544011012225737587227132688520701668472903261227864058204422639220113081007111978071553487559523527579581069629795611084577364241255869346862825770192564604507479746917803951806297523780877112736884287245819681702068139275993081064403187931695164623984729948084933503486509201110610402353502884534455992916796910835835661698452604725106189687435644431321171661200805051680410715283416875304910017777415876891746077064299711608693451113604936727018572280341441312153636641328822258571013031340373867483981384929954631474993900537281865214735578823460114596095429153718089113648538981099472661767287058796055141049621501487780347047741835503321954652581565208345031081505926637616583317764521474794331894455965741900338554214324495261606523242974164746396376763365225135455419942306844059603833969915833011477557126883429234064775476816766011783264997978775883277953051385466538074636402330173420834633309006331033941530065559506047349384513517493562534003851117644083481393628134123474270806295277293330463880831354052002822970208506386555102786478369148210135015306244448150521768710426441114069689510478995749729351221844161572305695261427537327449339366892494749879606901968259665010180240142513730209180912798301210815333452584136186331436282369638697255463333545677332116991429140623438455862575316151466318646093150817816680246919156887162227053141622577692470101554036915705012899439692927573076840055586560533900360210958224631436277756369572325305194484866028003171169227094657929095032431628845492698062483969823019361890227821688381965297561923216319396534155083642274389935313715901123230132391342770325055169657148381027654223109035604907921372515640299934952872908120327839760215087489604822815263052854831213979351040670231336316600891802214245505497545941025109308209414448040142711894966402913948343297484660630555838055387331559387087948351834429553918917640559954420777734123041797128684659004696311674597087289743687958844141001811453009720384813775324976313220480118335700797962]
$x[0] = smn(0, 1, $x[0], [$x[0]])
$Definition = <<'DEF'
def encode(prog)
  prog.unpack("H*")[0].to_i(16)
end

def decode(int)
  [int.to_s(16)].pack("H*")
end

def universal(prog_g, inputs)
  prog = decode(prog_g)
  args = "$x = " + inputs.to_s + "\n"
  $x_temp.push($x.dup)
  $x = []
  ans = eval(args + prog)
  $x = $x_temp.shift
  return ans
end

$definitionstr = '$Definition = <<\'DEF\''+"\n"+$Definition +"DEF\n"

def smn(m, n, prog_g, inputs)
  init = "$x=[] unless $x\n" + "$x_temp=[] unless $x_temp\n"
  prog = decode(prog_g)
  args = "$x[#{m}, #{n}] = " + inputs[0, n].to_s + "\n"
  encode($definitionstr + $Definition + init + args + prog)
end

def rec(prog_g, n)
  prog = decode(prog_g)
  f = <<~EOS
  $x[#{n}] = smn(#{n}, 1, $x[#{n}], [$x[#{n}]])
  #{prog}
  EOS
  f_g = encode(f)
  smn(n, 1, f_g, [f_g])
end
DEF
def encode(prog)
  prog.unpack("H*")[0].to_i(16)
end

def decode(int)
  [int.to_s(16)].pack("H*")
end

def universal(prog_g, inputs)
  prog = decode(prog_g)
  args = "$x = " + inputs.to_s + "\n"
  $x_temp.push($x.dup)
  $x = []
  ans = eval(args + prog)
  $x = $x_temp.shift
  return ans
end

$definitionstr = '$Definition = <<\'DEF\''+"\n"+$Definition +"DEF\n"

def smn(m, n, prog_g, inputs)
  init = "$x=[] unless $x\n" + "$x_temp=[] unless $x_temp\n"
  prog = decode(prog_g)
  args = "$x[#{m}, #{n}] = " + inputs[0, n].to_s + "\n"
  encode($definitionstr + $Definition + init + args + prog)
end

def rec(prog_g, n)
  prog = decode(prog_g)
  f = <<~EOS
  $x[#{n}] = smn(#{n}, 1, $x[#{n}], [$x[#{n}]])
  #{prog}
  EOS
  f_g = encode(f)
  smn(n, 1, f_g, [f_g])
end
universal(smn(0,1,164341359529058787722379816188873226623742739294474,[$x[0]]),[])

